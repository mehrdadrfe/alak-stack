apiVersion: apps/v1
kind: Deployment
metadata:
  name: alak-gatekeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alak-gatekeeper
  template:
    metadata:
      labels:
        app: alak-gatekeeper
    spec:
      containers:
        - name: alak-gatekeeper
          image: {{ .Values.alakGatekeeper.image }}
          ports:
            - containerPort: {{ .Values.alakGatekeeper.port }}
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: alak-env
                  key: REDIS_HOST
            - name: ALAK_GEO_URL
              valueFrom:
                configMapKeyRef:
                  name: alak-env
                  key: ALAK_GEO_URL
            - name: HA_PROXY_URL
              valueFrom:
                configMapKeyRef:
                  name: alak-env
                  key: HA_PROXY_URL
            - name: SKIP_TLS_VERIFY
              valueFrom:
                configMapKeyRef:
                  name: alak-env
                  key: SKIP_TLS_VERIFY
---
apiVersion: v1
kind: Service
metadata:
  name: alak-gatekeeper
spec:
  selector:
    app: alak-gatekeeper
  ports:
    - name: http
      port: {{ .Values.alakGatekeeper.port }}
      targetPort: {{ .Values.alakGatekeeper.port }}
---
{{- if .Values.alakGatekeeper.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: alak-gatekeeper
  labels:
    {{- toYaml .Values.alakGatekeeper.serviceMonitor.labels | nindent 4 }}
    release: prometheus
spec:
  selector:
    matchLabels:
      app: alak-gatekeeper
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
  endpoints:
    - port: http  # or "metrics" if you add a second port
      path: {{ .Values.alakGatekeeper.serviceMonitor.path }}
      interval: {{ .Values.alakGatekeeper.serviceMonitor.interval }}
{{- end }}
